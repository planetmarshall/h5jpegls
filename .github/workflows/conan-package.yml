name: conan-package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  linux-build:
    strategy:
      matrix:
        image: ['conanio/gcc10-ubuntu16.04:1.40.3', 'conanio/clang12-ubuntu16.04:1.40.3']
        libcxx: [libstdc++11, libc++]
        plugin: [shared, static]
        exclude:
          - image: 'conanio/gcc10-ubuntu16.04:1.40.3'
            libcxx: libc++
        include:
          - image: 'conanio/gcc10-ubuntu16.04:1.40.3'
            profile: gcc10
          - image: 'conanio/clang12-ubuntu16.04:1.40.3'
            libcxx: libc++
            profile: clang12-libc++
          - image: 'conanio/clang12-ubuntu16.04:1.40.3'
            libcxx: libstdc++11
            profile: clang12-libstdc++

    runs-on: ubuntu-20.04
    container:
      image: ${{ matrix.image }}
      options: '--user=root'
    steps:
      - name: install prerequisites
        run: |
          apt update
          apt-get install -y --no-install-recommends software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt update
          apt-get install -y --no-install-recommends git
      - name: checkout repository
        uses: actions/checkout@v2
      - name: set environment variables
        run: |
          bash .github/workflows/set_env_vars_package.sh ${{ matrix.plugin }}
      - name: create conan cache keys
        run: |
          conan config install .github/workflows/conan
          CONAN_ARGS="
            --profile ${{ matrix.profile }} \
            --build missing
          "
          conan lock create conanfile.py ${CONAN_ARGS} ${CONAN_OPTIONS}
      - name: get conan cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            /home/conan/.conan/data
            !/home/conan/.conan/data/**/conan_sources.tgz
          key: conan-${{ matrix.profile }}-${{ hashFiles('conan.lock') }}
      - name: Build Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: conan install . --install-folder build --build missing --build hdf5 ${CONAN_OPTIONS}
      - name: Create conan package
        run: |
          conan create . \
            --lockfile conan.lock \
            --build missing \
            --build h5jpegls
  windows-build:
    strategy:
      matrix:
        profile: [vs2019, vs2019-clang]
        plugin: [static, shared]
    runs-on: windows-2019
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: set environment variables
        run: |
          bash .github/workflows/set_env_vars_package.sh ${{ matrix.plugin }}
      - name: create conan cache keys
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade conan
          CONAN_ARGS="
            --profile .github/workflows/conan/profiles/${{ matrix.profile }} \
            --build missing"
          conan lock create conanfile.py ${CONAN_ARGS} ${CONAN_OPTIONS}
        shell: bash
      - name: get conan cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.conan/data
            !~/.conan/data/**/conan_sources.tgz
          key: conan-${{ matrix.profile }}-${{ hashFiles('conan.lock') }}
      - name: create conan package
        run: |
          conan create . \
            --lockfile conan.lock \
            --build missing \
            --build h5jpegls
        shell: bash
  macos-build:
    strategy:
      matrix:
        profile: [apple-clang13]
        plugin: [static, shared]
    runs-on: macos-11
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: set environment variables
        run: |
          bash .github/workflows/set_env_vars_package.sh ${{ matrix.plugin }}
      - name: create conan cache keys
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade conan
          CONAN_ARGS="
            --profile .github/workflows/conan/profiles/${{ matrix.profile }} \
            --build missing"
          conan lock create conanfile.py ${CONAN_ARGS} ${CONAN_OPTIONS}
        shell: bash
      - name: get conan cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.conan/data
            !~/.conan/data/**/conan_sources.tgz
          key: conan-${{ matrix.profile }}-${{ hashFiles('conan.lock') }}
      - name: create conan package
        run: |
          conan create . \
            --lockfile conan.lock \
            --build missing \
            --build h5jpegls
        shell: bash
